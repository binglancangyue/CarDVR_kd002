apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            storeFile file('D:\\adasdeng\\CarDVR\\test.jks')
            storePassword '12345678'
            keyPassword '12345678'
            keyAlias 'key0'
        }
        release_key {
            storeFile file('E:\\AndroidStudioWork\\DVR\\CarDVR_kd002\\CarDVR\\release.keystore')
            storePassword '12345678'
            keyPassword '12345678'
            keyAlias 'BxCarDVR'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.bx.carDVR"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName '1.0.210331.1'
        multiDexEnabled = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            // 开启混淆
            minifyEnabled false
            // Zipalign压缩优化
            zipAlignEnabled true
            // 移除无用的资源文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    buildToolsVersion = '29.0.3'

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    ndkVersion '22.1.7171670'
}

dependencies {
//    implementation files('libs/classes.jar')
//    implementation files('libs/epmedia.jar')
//    implementation files('libs/isoparser-1.1.22.jar')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.1'

    implementation 'com.googlecode.mp4parser:isoparser:1.1.22'
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'


//    implementation 'com.jcodecraeer:xrecyclerview:1.5.9'
//    implementation 'com.github.bumptech.glide:glide:4.9.0'
//    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'com.alibaba:fastjson:1.2.62'

//    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.amap.api:location:5.1.0'
//    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'
//    implementation 'com.trello.rxlifecycle2:rxlifecycle-navi:2.2.2'
//    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'

}

preBuild {
    doLast {
        def imlFile = file(project.name + ".iml")
        println('Change ' + project.name + '.iml order')
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            new groovy.util.Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            // nop, iml not found
        }
    }
}
